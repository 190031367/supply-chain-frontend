{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Projects/edgistify/try2/client/src/components/View.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst CommentItem = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.text), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.time), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.author));\n};\n\nclass View extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      description: \"\",\n      author: \"\",\n      time: \"\",\n      comments: [{\n        text: \"\",\n        time: \"\",\n        author: \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('http://localhost:5000/blogs/' + this.props.match.params.id).then(res => {\n      const data = res.data;\n      console.log(data);\n      const comments = data.comments.map((com, ind) => {\n        return {\n          text: com.text,\n          time: com.createdAt,\n          author: com.author.username\n        };\n      });\n      const blog = {\n        title: data.title,\n        description: data.description,\n        author: data.author.username,\n        time: data.createdAt,\n        _id: data._id // comments: {\n        //     text: data.comments[0].text,\n        //     time: data.comments[0].createdAt,\n        //     author: data.comments[0].author.username\n        // }\n\n      }; // const blogs = data.map((blg, ind) => {\n      //   return {\n      //     title: blg.title,\n      //     description: blg.description,\n      //     author: blg.author.username,\n      //     time: blg.createdAt,\n      //     _id: blg._id,\n      //     comments: {\n      //         text: blg.comments.text,\n      //         time: blg.comments.createdAt\n      //     }\n      //   }\n      // })\n\n      this.setState({ ...blog,\n        comments\n      });\n    });\n  }\n\n  render() {\n    const comments = this.state.comments.map((com, index) => React.createElement(CommentItem, {\n      key: index,\n      text: com.text,\n      time: com.time,\n      author: com.author,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.description), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.author), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.time), comments);\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["/home/ayush/Projects/edgistify/try2/client/src/components/View.js"],"names":["React","Component","axios","CommentItem","props","text","time","author","View","constructor","state","title","description","comments","componentDidMount","console","log","get","match","params","id","then","res","data","map","com","ind","createdAt","username","blog","_id","setState","render","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst CommentItem = (props) => {\n    return(\n        <div>\n            <div>{props.text}</div>\n            <div>{props.time}</div>\n            <div>{props.author}</div>\n        </div>\n    )\n}\n\nclass View extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            author: \"\",\n            time: \"\",\n            comments: [{\n                text: \"\",\n                time: \"\",\n                author: \"\"\n            }]\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        axios.get('http://localhost:5000/blogs/'+this.props.match.params.id)\n      .then(res => {\n        const data = res.data;\n        console.log(data);\n        const comments = data.comments.map((com, ind) => {\n            return {\n                text: com.text,\n                time: com.createdAt,\n                author: com.author.username\n            }\n        })\n        const blog = {\n            title: data.title,\n            description: data.description,\n            author: data.author.username,\n            time: data.createdAt,\n            _id: data._id\n            // comments: {\n            //     text: data.comments[0].text,\n            //     time: data.comments[0].createdAt,\n            //     author: data.comments[0].author.username\n            // }\n        }\n        // const blogs = data.map((blg, ind) => {\n        //   return {\n        //     title: blg.title,\n        //     description: blg.description,\n        //     author: blg.author.username,\n        //     time: blg.createdAt,\n        //     _id: blg._id,\n        //     comments: {\n        //         text: blg.comments.text,\n        //         time: blg.comments.createdAt\n        //     }\n        //   }\n        // })\n        this.setState({...blog, comments})\n      })\n    }\n    \n    \n    render() {\n        const comments = this.state.comments.map((com, index) => (\n            <CommentItem key={index} text={com.text} time={com.time} author={com.author}/>\n            ))\n        return(\n            <div>\n\n                <div>{this.state.title}</div>\n                <div>{this.state.description}</div>\n                <div>{this.state.author}</div>\n                <div>{this.state.time}</div>\n                {comments}\n                {/* <div>{this.state.comments.text}</div>\n                <div>{this.state.comments.time}</div>\n                <div>{this.state.comments.author}</div> */}\n\n            </div>\n        )\n    }\n}\n\nexport default View;"]},"metadata":{},"sourceType":"module"}